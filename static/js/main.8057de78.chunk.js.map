{"version":3,"sources":["components/Header.js","components/TextFieldComponent.js","constans/labelTexts.js","components/ButtonComponent.js","pages/components/Sidebar.js","pages/components/Content.js","services/service.js","pages/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","title","textAlign","fontSize","justifyContent","alignItems","textTransform","color","fontWeight","Header","classes","AppBar","position","style","backgroundColor","Toolbar","className","theme","input","boxSizing","marginTop","marginBottom","width","TextFieldComponent","label","placeholder","onChangeTex","valueInput","TextField","value","variant","onChange","e","target","trim","valueInputLabels","name","columnsTable","id","minWidth","button","ButtonComponent","submitForm","Button","type","form","display","flexDirection","logo","height","background","wrapper","Sidebar","useState","surname","patronymic","identif","doc_series","doc_num","user","setUser","renderInput","onChangeText","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","Grid","wrapperForm","onSubmit","preventDefault","alert","container","maxHeight","Content","users","page","setPage","rowsPerPage","setRowsPerPage","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","TableBody","slice","row","index","hover","role","tabIndex","align","sname","bdate","addressLast","ateAddress","dsdDateRec","length","TablePagination","rowsPerPageOptions","component","count","onChangePage","event","newPage","onChangeRowsPerPage","console","log","getDataUser","optionsUrl","a","urlUser","params","Object","entries","key","join","fetch","response","json","dataUsers","getUserOptions","filterData","Error","item","getDate","getAddress","typeCityL","cityL","regionL","typeStreetL","streetL","house","app","year","month","date","substring","header","padding","spacing","sidebar","maxWidth","marginLeft","marginRight","flexWrap","MainPage","filterParams","setFilterParams","setUsers","dataUser","xs","grid","data","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6QAIMA,EAAYC,aAAW,iBAAO,CAChCC,KAAM,CACFC,SAAU,GAEdC,MAAO,CACHD,SAAU,EACVE,UAAW,SACXC,SAAU,OACVC,eAAgB,SAChBC,WAAY,SACZC,cAAe,YACfC,MAAO,QACPC,WAAY,YAeLC,EAXA,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,MAAOM,EAAY,EAAZA,MACfG,EAAUb,IAChB,OACI,cAACc,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,gBAAgB,GAAD,OAAKP,IAAvD,SACI,cAACQ,EAAA,EAAD,CAASC,UAAWN,EAAQT,MAA5B,SACKA,O,0BCrBXJ,EAAYC,aAAW,SAAAmB,GAAK,MAAK,CACnCC,MAAO,CACHC,UAAW,YACXC,UAAW,MACXC,aAAc,MACdC,MAAO,YAiBAC,EAZY,SAAC,GAA0E,IAAD,IAAvEC,aAAuE,MAA/D,KAA+D,MAAzDC,mBAAyD,MAA3C,KAA2C,EAArCC,EAAqC,EAArCA,YAAqC,IAAxBC,kBAAwB,MAAX,KAAW,EAC3FjB,EAAUb,IAChB,OAAO,cAAC+B,EAAA,EAAD,CACHC,MAAOF,EACPX,UAAWN,EAAQQ,MACnBM,MAAOA,EACPC,YAAaA,EACbK,QAAQ,WACRC,SAAU,SAAAC,GAAC,OAAIN,EAAYM,EAAEC,OAAOJ,MAAMK,YCtB5CC,EACO,CAAEC,KAAM,UAAWX,YAAa,wFAAmBD,MAAO,8CADjEW,EAEI,CAAEC,KAAM,OAAQX,YAAa,gEAAeD,MAAO,sBAFvDW,EAGU,CAAEC,KAAM,aAAcX,YAAa,8FAAoBD,MAAO,oDAHxEW,EAIO,CAAEC,KAAM,UAAWX,YAAa,4EAAiBD,MAAO,6HAJ/DW,EAKU,CAAEC,KAAM,aAAcZ,MAAO,kCALvCW,EAMO,CAAEC,KAAM,UAAWZ,MAAO,2DAGjCa,EAAe,CACjB,CAAEC,GAAI,EAAGd,MAAO,6CAAWe,SAAU,KACrC,CAAED,GAAI,EAAGd,MAAO,qBAAOe,SAAU,KACjC,CAAED,GAAI,EAAGd,MAAO,mDAAYe,SAAU,KACtC,CAAED,GAAI,EAAGd,MAAO,4EAAiBe,SAAU,KAC3C,CAAED,GAAI,EAAGd,MAAO,wIAA2Be,SAAU,KACrD,CAAED,GAAI,EAAGd,MAAO,wMAAyCe,SAAU,KACnE,CAAED,GAAI,EAAGd,MAAO,uKAAsCe,SAAU,KAChE,CAAED,GAAI,EAAGd,MAAO,8FAAoBe,SAAU,K,SCb5C1C,EAAYC,aAAW,SAAAmB,GAAK,MAAK,CACnCuB,OAAQ,CACJlB,MAAO,YAiBAmB,EAbS,SAAC,GAAmB,EAAjBC,WAAkB,IACnChC,EAAUb,IAChB,OACI,cAAC8C,EAAA,EAAD,CAAQb,QAAQ,YACZvB,MAAM,UACNS,UAAWN,EAAQ8B,OACnBI,KAAK,SAHT,wHCNF/C,EAAYC,aAAW,SAACmB,GAAD,MAAY,CACrC4B,KAAM,CACFC,QAAS,OACTC,cAAe,UAEnBC,KAAM,CACFC,OAAQ,OACRH,QAAS,OACT1C,eAAgB,SAChBC,WAAY,SACZG,WAAY,OACZ0C,WAAY,UACZ3C,MAAO,QACPD,cAAe,aAEnB6C,QAAS,CACLL,QAAS,YAoFFM,EAhFC,SAAC,GAAqB,IAAnBV,EAAkB,EAAlBA,WACThC,EAAUb,IADiB,EAETwD,mBACpB,CACIjB,KAAM,GACNkB,QAAS,GACTC,WAAY,GACZC,QAAS,GACTC,WAAY,GACZC,QAAS,KATgB,mBAE1BC,EAF0B,KAEpBC,EAFoB,KAiB3BC,EAAc,SAAA3C,GAChB,OACI,cAAC,EAAD,2BACQA,GADR,IAEIQ,YAAa,SAAAG,GAAK,OART,SAACO,EAAMP,GACxB+B,EAAQ,2BAAKD,GAAN,kBAAavB,EAAOP,KAOGiC,CAAa5C,EAAMkB,KAAMP,IAC/CF,WAAYgC,EAAKzC,EAAMkB,UAiBnC,OAZA2B,qBAAU,WACN,IAAMpC,EAAaqC,aAAaC,QAAQ,cACpCtC,GACAiC,EAAQM,KAAKC,MAAMxC,MAExB,IAEHoC,qBAAU,WACNC,aAAaI,QAAQ,aAAcF,KAAKG,UAAUV,MACnD,CAACA,IAGI,cAACW,EAAA,EAAD,CAAMtD,UAAWN,EAAQ6D,YAAzB,SACJ,uBACIvD,UAAWN,EAAQmC,KACnB2B,SAAU,SAAAxC,GAAM,IACJwB,EAA8BG,EAA9BH,QAASE,EAAqBC,EAArBD,QAASJ,EAAYK,EAAZL,QAEtBE,GAAWE,GAAWJ,GACtBZ,EAAWiB,GACX3B,EAAEyC,mBAEFzC,EAAEyC,iBACFC,MAAM,0jBAVlB,UAeQb,EAAY1B,GAGZ0B,EAAY1B,GAGZ0B,EAAY1B,GAGZ0B,EAAY1B,GAEhB,sBAAKnB,UAAWN,EAAQyC,QAAxB,UAEQU,EAAY1B,GAGZ0B,EAAY1B,MAGpB,cAAC,EAAD,CAAiBO,WAAYA,U,uECzFnC7C,EAAYC,aAAW,SAACmB,GAAD,MAAY,CACrC0D,UAAW,CACPC,UAAW,YAkEJC,EA9DC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTpE,EAAUb,IADW,EAEHwD,mBAAS,GAFN,mBAEpB0B,EAFoB,KAEdC,EAFc,OAGW3B,mBAAS,IAHpB,mBAGpB4B,EAHoB,KAGPC,EAHO,KAe3B,OACI,eAACC,EAAA,EAAD,CAAOnE,UAAWN,EAAQX,KAA1B,UACI,cAACqF,EAAA,EAAD,CAAgBpE,UAAWN,EAAQiE,UAAnC,SACI,eAACU,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAA/B,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACKpD,EAAaqD,KAAI,SAAAC,GAAM,OACpB,cAACC,EAAA,EAAD,CAEI/E,MAAO,CAAE0B,SAAUoD,EAAOpD,UAF9B,SAIKoD,EAAOnE,OAHHmE,EAAOrD,WAQ5B,cAACuD,EAAA,EAAD,UACKf,EAAMgB,MAAMf,EAAOE,EAAaF,EAAOE,EAAcA,GAAaS,KAAI,SAACK,EAAKC,GACzE,OACI,eAACP,EAAA,EAAD,CAAUQ,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,UACI,cAACP,EAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBL,EAAIzC,UAC7B,cAACsC,EAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBL,EAAI3D,OAC7B,cAACwD,EAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBL,EAAIM,QAC7B,cAACT,EAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBL,EAAIO,QAC7B,cAACV,EAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBL,EAAIvC,UAC7B,cAACoC,EAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBL,EAAIQ,cAC7B,cAACX,EAAA,EAAD,CAAWQ,MAAM,OAAjB,SAAyBL,EAAIS,aAC7B,cAACZ,EAAA,EAAD,CAAWQ,MAAM,SAAjB,SAA2BL,EAAIU,eARgB3B,EAAM4B,OAASV,aAetF,cAACW,EAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAOhC,EAAM4B,OACbzB,YAAaA,EACbF,KAAMA,EACNgC,aAlDa,SAACC,EAAOC,GAC7BjC,EAAQiC,IAkDAC,oBA/CoB,SAACF,GAC7BG,QAAQC,KAAKJ,EAAM/E,OAAOJ,OAC1BqD,GAAgB8B,EAAM/E,OAAOJ,OAC7BmD,EAAQ,UChBVqC,EAAW,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACVC,EADU,UAdb,sEAca,aAZEC,EAasBH,EAZjCI,OAAOC,QAAQF,GACjB/B,KAAI,YAAmB,IAAD,mBAAhBkC,EAAgB,KAAX/F,EAAW,KACnB,OAAIA,EACM,GAAN,OAAU+F,EAAV,YAAiB/F,GAEX,GAAN,OAAU+F,MAGjBC,KAAK,OAGM,kBAGWC,MAAMN,GAHjB,cAGNO,EAHM,gBAIYA,EAASC,OAJrB,cAINC,EAJM,iBAKaC,EAAeD,GAL5B,eAKNE,EALM,yBAMLA,GANK,kCAQZzD,MAAM,IAAI0D,OARE,kCAZE,IAAAX,IAYF,qBAAH,sDAYXS,EAAiB,SAAAH,GACnB,OAAOA,EAASrC,KAAI,SAAA2C,GAChB,MAAQ,CACJ/E,QAAS+E,EAAK/E,QACdlB,KAAMiG,EAAKjG,KACXiE,MAAOgC,EAAKhC,MACZC,MAAOgC,EAAQD,EAAK/B,OACpB9C,QAAS6E,EAAK7E,QACd+C,YAAagC,EAAWF,EAAK9B,aAC7BC,WAAY6B,EAAK7B,YAAc,IAC/BC,WAAY4B,EAAK5B,YAAc,SAMrC8B,EAAa,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1E,MAAM,GAAN,OACON,GAAwB,GAD/B,sBAEOC,EAAQA,EAAQ,IAAM,GAF7B,sBAGOC,EAAUA,EAAU,mCAAY,GAHvC,sBAIOC,EAAcA,EAAc,IAAM,GAJzC,sBAKOC,EAAUA,EAAU,IAAM,GALjC,sBAMOC,EAAQ,sBAASA,EAAQ,IAAM,GANtC,sBAOOC,EAAM,iBAASA,EAAM,KAI1BR,EAAU,SAAAzG,GACZ,IAAMkH,EAAOlH,EAAMiE,MAAM,EAAG,GACtBkD,EAAQnH,EAAMiE,MAAM,EAAG,GACvBmD,EAAOpH,EAAMqH,UAAU,GAC7B,MAAM,GAAN,OAAUD,EAAV,YAAkBD,EAAlB,YAA2BD,IClDzBlJ,EAAYC,aAAW,SAACmB,GAAD,gBACzBkI,OAAQ,CACJC,QAASnI,EAAMoI,QAAQ,IAE3BC,QAAS,CACLC,SAAU,SAEdhF,YAAa,CACThC,SAAU,QACViH,WAAY,QATS,uBAWjB,CACJC,YAAa,MACbD,WAAY,QAbS,qBAenB,CACFE,SAAU,WAhBW,KA4EdC,EAxDE,WACb,IAAMjJ,EAAUb,IADG,EAEqBwD,mBAAS,IAF9B,mBAEZuG,EAFY,KAEEC,EAFF,OAGOxG,mBAAS,IAHhB,mBAGZyB,EAHY,KAGLgF,EAHK,KAKnB/F,qBAAU,WACN,IAAMgG,EAAW/F,aAAaC,QAAQ,YAElC8F,GACAD,EAAS5F,KAAKC,MAAM4F,IAGnBH,GAIDA,GACA,sBAAC,4BAAArC,EAAA,sEACwBF,EAAYuC,GADpC,QACSnC,EADT,QAGOqC,EAASrC,IAET/C,MAAM,0KACNoF,EAAS,KANhB,0CAAD,KAUL,CAACF,IAEJ7F,qBAAU,WACNC,aAAaI,QAAQ,WAAYF,KAAKG,UAAUS,MACjD,CAACA,IAMJ,OACI,eAACR,EAAA,EAAD,CAAMK,WAAS,EAAf,UACI,cAACL,EAAA,EAAD,CAAM+D,MAAI,EAAC2B,GAAI,GAAIhJ,UAAWN,EAAQyI,OAAtC,SACI,cAAC,EAAD,CAAQlJ,MAAO,6CAAWM,MAAO,cAErC,eAAC+D,EAAA,EAAD,CAAMK,WAAS,EAACqF,GAAI,GAAIhJ,UAAWN,EAAQuJ,KAAMZ,QAAS,EAA1D,UACI,eAAC/E,EAAA,EAAD,CAAM+D,MAAI,EAAC2B,GAAI,EAAGhJ,UAAWN,EAAQ6D,YAArC,UACI,cAAC,EAAD,CAAQtE,MAAO,sHAAwBM,MAAO,YAC9C,cAAC,EAAD,CAASmC,WAAY,SAAAwH,GAXjCL,EAWoDK,SAE5C,eAAC5F,EAAA,EAAD,CAAM+D,MAAI,EAAC2B,GAAI,GAAf,UACI,cAAC,EAAD,CAAQ/J,MAAO,oGAAqBM,MAAO,YAC3C,cAAC,EAAD,CAASuE,MAAOA,cClErBqF,EARH,WACV,OACE,qBAAKnJ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSoJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8057de78.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'center',\r\n        fontSize: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textTransform: 'uppercase',\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n    },\r\n}));\r\n\r\nconst Header = ({ title, color }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" style={{ backgroundColor: `${color}` }}>\r\n            <Toolbar className={classes.title} >\r\n                {title}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    input: {\r\n        boxSizing: 'borderBox',\r\n        marginTop: '8px',\r\n        marginBottom: '8px',\r\n        width: '100%',\r\n\r\n    }\r\n}));\r\n\r\nconst TextFieldComponent = ({ label = null, placeholder = null, onChangeTex, valueInput = null }) => {\r\n    const classes = useStyles();\r\n    return <TextField\r\n        value={valueInput}\r\n        className={classes.input}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        variant=\"outlined\"\r\n        onChange={e => onChangeTex(e.target.value.trim())}\r\n    />\r\n}\r\n\r\nexport default TextFieldComponent","const valueInputLabels = {\r\n    surname: { name: 'surname', placeholder: 'введите фамилию', label: 'Фамилия' },\r\n    name: { name: 'name', placeholder: 'введите имя', label: 'Имя' },\r\n    patronymic: { name: 'patronymic', placeholder: 'введите отчество', label: 'Отчество' },\r\n    identif: { name: 'identif', placeholder: 'введите номер', label: 'Индефикационный номер' },\r\n    doc_series: { name: 'doc_series', label: 'Серия' },\r\n    doc_num: { name: 'doc_num', label: '№ паспорта' }\r\n}\r\n\r\nconst columnsTable = [\r\n    { id: 1, label: 'Фамилия', minWidth: 100 },\r\n    { id: 2, label: 'Имя', minWidth: 120 },\r\n    { id: 3, label: 'Отчество', minWidth: 120 },\r\n    { id: 4, label: 'Дата рождения', minWidth: 120 },\r\n    { id: 5, label: 'Идентификационный номер', minWidth: 120 },\r\n    { id: 6, label: 'Адрес регистрации (после конвертации)', minWidth: 100 },\r\n    { id: 7, label: 'Адрес регистрации (коды АТЕ и ТЕ) ', minWidth: 100 },\r\n    { id: 8, label: 'Дата регистрации', minWidth: 50 },\r\n]\r\n\r\nexport { valueInputLabels, columnsTable }","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        width: '100%'\r\n    }\r\n}));\r\n\r\nconst ButtonComponent = ({ submitForm }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            type='submit'\r\n        >\r\n            Поиск в локальной БД\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ButtonComponent","import React, { useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextFieldComponent from '../../components/TextFieldComponent'\r\nimport { valueInputLabels } from '../../constans/labelTexts'\r\nimport ButtonComponent from '../../components/ButtonComponent'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    logo: {\r\n        height: '40px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontWeight: 'bold',\r\n        background: '#F0DFB8',\r\n        color: 'white',\r\n        textTransform: 'uppercase'\r\n    },\r\n    wrapper: {\r\n        display: 'flex',\r\n    },\r\n}));\r\n\r\nconst Sidebar = ({ submitForm, }) => {\r\n    const classes = useStyles();\r\n    const [user, setUser] = useState(\r\n        {\r\n            name: '',\r\n            surname: '',\r\n            patronymic: '',\r\n            identif: '',\r\n            doc_series: '',\r\n            doc_num: ''\r\n        }\r\n    )\r\n\r\n    const onChangeText = (name, value) => {\r\n        setUser({ ...user, [name]: value })\r\n    }\r\n\r\n    const renderInput = input => {\r\n        return (\r\n            <TextFieldComponent\r\n                {...input}\r\n                onChangeTex={value => onChangeText(input.name, value)}\r\n                valueInput={user[input.name]}\r\n            />\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const valueInput = localStorage.getItem('valueInput')\r\n        if (valueInput) {\r\n            setUser(JSON.parse(valueInput))\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('valueInput', JSON.stringify(user))\r\n    }, [user])\r\n\r\n\r\n    return (<Grid className={classes.wrapperForm}>\r\n        <form\r\n            className={classes.form}\r\n            onSubmit={e => {\r\n                const { identif, doc_num, surname } = user\r\n\r\n                if (identif || doc_num || surname) {\r\n                    submitForm(user)\r\n                    e.preventDefault()\r\n                } else {\r\n                    e.preventDefault()\r\n                    alert(' Для успешного запроса необходимо  заполнить хотябы одно  поле: 1.фамилия 2. № паспорта 3. идентификационный номер')\r\n                }\r\n            }}\r\n        >\r\n            {\r\n                renderInput(valueInputLabels.surname)\r\n            }\r\n            {\r\n                renderInput(valueInputLabels.name)\r\n            }\r\n            {\r\n                renderInput(valueInputLabels.patronymic)\r\n            }\r\n            {\r\n                renderInput(valueInputLabels.identif)\r\n            }\r\n            <div className={classes.wrapper}>\r\n                {\r\n                    renderInput(valueInputLabels.doc_series)\r\n                }\r\n                {\r\n                    renderInput(valueInputLabels.doc_num)\r\n                }\r\n            </div>\r\n            <ButtonComponent submitForm={submitForm} />\r\n        </form>\r\n    </Grid >\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { columnsTable } from '../../constans/labelTexts'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        maxHeight: '100%',\r\n    },\r\n}));\r\n\r\nconst Content = ({ users }) => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        console.log(+event.target.value)\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.root} >\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\" >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columnsTable.map(column => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={users.length - index}>\r\n                                    <TableCell align=\"left\">{row.surname}</TableCell>\r\n                                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                                    <TableCell align=\"left\">{row.sname}</TableCell>\r\n                                    <TableCell align=\"left\">{row.bdate}</TableCell>\r\n                                    <TableCell align=\"left\">{row.identif}</TableCell>\r\n                                    <TableCell align=\"left\">{row.addressLast}</TableCell>\r\n                                    <TableCell align=\"left\">{row.ateAddress}</TableCell>\r\n                                    <TableCell align=\"center\">{row.dsdDateRec}</TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={users.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Content\r\n","let url = `https://a.todes.by:13555/data-service-test/api/v1/data?sys_organ=26`\r\n\r\nconst getOptionsUrl = params => {\r\n    return Object.entries(params)\r\n        .map(([key, value]) => {\r\n            if (value) {\r\n                return `${key}=${value}`\r\n            } else {\r\n                return `${key}`\r\n            }\r\n        })\r\n        .join('&')\r\n}\r\n\r\nconst getDataUser = async optionsUrl => {\r\n    const urlUser = `${url}&${getOptionsUrl(optionsUrl)}`\r\n    try {\r\n        const response = await fetch(urlUser)\r\n        const dataUsers = await response.json()\r\n        const filterData = await getUserOptions(dataUsers)\r\n        return filterData\r\n    } catch (err) {\r\n        alert(new Error())\r\n    }\r\n}\r\n\r\nconst getUserOptions = response => {\r\n    return response.map(item => {\r\n        return ({\r\n            surname: item.surname,\r\n            name: item.name,\r\n            sname: item.sname,\r\n            bdate: getDate(item.bdate),\r\n            identif: item.identif,\r\n            addressLast: getAddress(item.addressLast),\r\n            ateAddress: item.ateAddress || '-',\r\n            dsdDateRec: item.dsdDateRec || '-'\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nconst getAddress = ({ typeCityL, cityL, regionL, typeStreetL, streetL, house, app }) => {\r\n    return (\r\n        `${typeCityL ? typeCityL : ''}\r\n         ${cityL ? cityL + ',' : ''}\r\n         ${regionL ? regionL + ' раёон,' : ''}\r\n         ${typeStreetL ? typeStreetL + ',' : ''}\r\n         ${streetL ? streetL + ',' : ''}\r\n         ${house ? 'дом ' + house + ',' : ''}\r\n         ${app ? 'кв. ' + app : ''}`\r\n    )\r\n}\r\n\r\nconst getDate = value => {\r\n    const year = value.slice(0, 4)\r\n    const month = value.slice(4, 6)\r\n    const date = value.substring(6)\r\n    return `${date}.${month}.${year}`\r\n\r\n}\r\n\r\nexport { getUserOptions, getAddress, getDataUser }\r\n","import React, { useState, useEffect, useReducer } from 'react'\r\nimport Header from '../components/Header'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Sidebar from './components/Sidebar'\r\nimport Content from './components/Content'\r\nimport { getDataUser } from '../services/service'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    sidebar: {\r\n        maxWidth: '270px'\r\n    },\r\n    wrapperForm: {\r\n        minWidth: '270px',\r\n        marginLeft: '5px',\r\n    },\r\n    header: {\r\n        marginRight: '8px',\r\n        marginLeft: '5px',\r\n    },\r\n    grid: {\r\n        flexWrap: 'nowrap',\r\n    }\r\n}));\r\n\r\nconst MainPage = () => {\r\n    const classes = useStyles();\r\n    const [filterParams, setFilterParams] = useState('')\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        const dataUser = localStorage.getItem('dataUser')\r\n\r\n        if (dataUser) {\r\n            setUsers(JSON.parse(dataUser))\r\n        }\r\n\r\n        if (!filterParams) {\r\n            return\r\n        }\r\n\r\n        if (filterParams) {\r\n            (async () => {\r\n                const params = await getDataUser(filterParams)\r\n                if (params) {\r\n                    setUsers(params)\r\n                } else {\r\n                    alert('В базе данных, ничего не найдено!!!!')\r\n                    setUsers([])\r\n                }\r\n            })()\r\n        }\r\n    }, [filterParams])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('dataUser', JSON.stringify(users))\r\n    }, [users])\r\n\r\n    const submitForm = params => {\r\n        setFilterParams(params)\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12} className={classes.header}>\r\n                <Header title={'главная'} color={'#00A2E8'} />\r\n            </Grid>\r\n            <Grid container xs={12} className={classes.grid} spacing={1}>\r\n                <Grid item xs={2} className={classes.wrapperForm}>\r\n                    <Header title={'регистрационный учет'} color={'#1565C0'} />\r\n                    <Sidebar submitForm={data => submitForm(data)} />\r\n                </Grid>\r\n                <Grid item xs={10} >\r\n                    <Header title={'Результаты поиска'} color={'#D9E8FC'} />\r\n                    <Content users={users} />\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MainPage","import React from 'react'\nimport MainPage from './pages/MainPage'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}